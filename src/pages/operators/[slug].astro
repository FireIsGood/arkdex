---
import MainLayout from "@layouts/MainLayout.astro";
import type { OperatorTypes } from "@scripts/operatorTypes";
import { toSlug } from "@scripts/slugGen";
import { filterObjectsBySubValue } from "@scripts/helperFunc";
import { getPicture } from "@astrojs/image";
import type { FilteredSkins, SkinTable } from "@scripts/skinTypes";
import Operator from "@components/operator.svelte";
import type { GetPictureResult } from "@astrojs/image/dist/lib/get-picture";

interface Elites {
  [key: string]: GetPictureResult;
}

export async function getStaticPaths() {
  let eliteImages: Elites = {};
  for (let elite of ["0", "1", "2"]) {
    eliteImages[elite] = await getPicture({
      src: `https://raw.githubusercontent.com/Aceship/Arknight-Images/main/ui/elite/${elite}-s.png`,
      widths: [72],
      aspectRatio: "1:1",
      formats: ["avif", "webp"],
    });
  }

  let operatorList = new Array();
  let skinList: SkinTable;

  await fetch(
    "https://raw.githubusercontent.com/Kengxxiao/ArknightsGameData/master/en_US/gamedata/excel/skin_table.json"
  )
    .then((res) => res.json())
    .then((data) => {
      skinList = data;
    });
  await fetch(
    "https://raw.githubusercontent.com/Kengxxiao/ArknightsGameData/master/en_US/gamedata/excel/character_table.json"
  )
    .then((response) => response.json())
    .then((data) => {
      operatorList = Object.entries(data)
        .filter(([technicalName, data]) => {
          const operator = data as OperatorTypes;
          return (
            operator.profession !== "TOKEN" && operator.profession !== "TRAP"
          );
        })
        .map(([technicalName, data]) => {
          const operator = data as OperatorTypes;

          // Get elite levels as an object with key as the level and value as the getPicture output
          let elites: Elites = {};
          for (let num of Object.keys(
            skinList.buildinEvolveMap[technicalName]
          )) {
            elites[num] = eliteImages[num];
          }

          const skins = filterObjectsBySubValue(
            skinList.charSkins,
            "charId",
            technicalName
          );

          const images = {};
          return {
            params: { slug: toSlug(operator.name) },
            props: { technicalName, operator, elites, skins },
          };
        });
    });

  return operatorList;
}

// Get skin data

interface Props {
  technicalName: string;
  operator: OperatorTypes;
  elites: GetPictureResult[];
  skins: FilteredSkins;
}

const { slug } = Astro.params;
const { technicalName, operator, elites, skins } = Astro.props as Props;

const title = `Arkdex â–ª ${operator.name}`;
const ogTitle = `Arkdex Page For ${operator.name}`;
const operatorImgAlt = `${operator.name} Image`;
const operatorAvatar = `https://raw.githubusercontent.com/Aceship/Arknight-Images/main/avatars/${operator.phases[0].characterPrefabKey}.png`;
---

<MainLayout
  title={title}
  ogTitle={ogTitle}
  padding={false}
  ogImg={operatorAvatar}
  ogImgAlt={operatorImgAlt}
  ogDesc={operator.itemUsage}
>
  <Operator
    client:idle
    technicalName={technicalName}
    operator={operator}
    elites={elites}
    skins={skins}
  />
</MainLayout>

<style lang="scss"></style>
